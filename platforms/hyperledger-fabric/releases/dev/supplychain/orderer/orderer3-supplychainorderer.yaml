apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer3
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer3
  chart:
    git: git@github.com:suvajit-sarkar/blockchain-automation-framework.git
    ref: workspace
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: adopblockchaincloud0502.azurecr.io/alpine-utils:1.0
    orderer:
      name: orderer3
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.internal.demo.aws.blockchaincloudpoc.com:9001
      role: vault-role
      authpath: demo-fabricsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer3.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: hf.demo.aws.blockchaincloudpoc.com

    genesis: |-
      CiIaIKibzq1XDe0HLUIGQLQhiK9KI7hmGRTIzX+9u+C69k89Ept0Cph0CpV0CngKWggBEAEaBgjS
      hr+WBiIKc3lzY2hhbm5lbCpANTA5MjkyNzM3ZmE2OWE1NzE5MWQxNzUzN2M2YWIzZGY1Nzk4ZDI5
      NmI4YzY2YTMzYzFkMzQ1MDZjYjY0Y2Y5MRIaEhigAvlvni46OVvyau2LOCf5tZD2YKNvOdkSmHMK
      lXMSknMSs1UKB09yZGVyZXISp1US/RkKDnN1cHBseWNoYWluTVNQEuoZGsQWCgNNU1ASvBYSsRYS
      rhYKDnN1cHBseWNoYWluTVNQEtMGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTREND
      QWU2Z0F3SUJBZ0lVVjlSbUtjNEcrRFJ1bDVDQVBRVkJ0QTJqTXUwd0NnWUlLb1pJemowRUF3SXcK
      Z1lFeEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pYSmxjakUrTUR3R0ExVUVBd3cxWTJFdWMzVndj
      R3g1WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZ
      eTVqYjIwd0hoY05Nakl3TnpFME1EWTAKTXpBeldoY05NalV3TlRBek1EWTBNekF6V2pDQmdURUxN
      QWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dgpibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVQ0d1BBWURWUVFECkREVmpZUzV6ZFhCd2JIbGph
      R0ZwYmkxdVpYUXVhR1l1WkdWdGJ5NWhkM011WW14dlkydGphR0ZwYm1Oc2IzVmsKY0c5akxtTnZi
      VEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCUHVmWGx5YkZJb0ZLSmhHc0hmZApF
      WW91Z0ZQZjY4VWZ1b0VDSzdMOVAvbFhpYVlZUG1teStVSmc2bjR3MEdLUlN2SU1JNjNMVk1MTUJP
      bzM3cExjCkw3ZWpRakJBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFn
      R21NQjBHQTFVZERnUVcKQkJTajZpZ0YyZ2UzSXhISlNJYWJFVDJKakVZQVhUQUtCZ2dxaGtqT1BR
      UURBZ05JQURCRkFpQnl6ZWJQWTNQUgpKNUNUT0drK0FzN1FQWHZMUE0zOEY5eE1yTEFFOHZKSXZn
      SWhBTnZ4SUU3bk43MG9yM09OZkg4aVBLdlhFYytGCndSd2Z6eHF1aEFkekF3L2gKLS0tLS1FTkQg
      Q0VSVElGSUNBVEUtLS0tLQoi3wgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRERUQ0NB
      clNnQXdJQkFnSVVSamlINmtxRkUxRkJ3dXVKTENxRWZoamNBc0F3Q2dZSUtvWkl6ajBFQXdJdwpn
      WUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJr
      eHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NH
      eDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5
      NWpiMjB3SGhjTk1qSXdOekUwTURjdwpNekF3V2hjTk1qTXdOekUwTURjd09EQXdXakJzTVFzd0NR
      WURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0Rn
      WURWUVFLRXdkUGNtUmxjbVZ5TVE0d0RBWURWUVFMRXdWaFpHMXAKYmpFZU1Cd0dBMVVFQXd3VlFX
      UnRhVzVBYzNWd2NHeDVZMmhoYVc0dGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSQpLb1pJemowREFR
      Y0RRZ0FFMGNnODhpQzVmei9CcEd0SmlkNWE1QTF0VThIY1I3V1hLODMzbVVHaEoyc2RmUmxWCi9S
      SDdsak5sb3pEeVAxQy9aZEh4bkI1TE1qVUlucjFwYjVUcStxT0NBUnd3Z2dFWU1BNEdBMVVkRHdF
      Qi93UUUKQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTOGZUK0RLK3lZUjVU
      UkNMNFE2dTZXeFhkWApVREFmQmdOVkhTTUVHREFXZ0JTajZpZ0YyZ2UzSXhISlNJYWJFVDJKakVZ
      QVhUQXNCZ05WSFJFRUpUQWpnaUZ2CmNtUmxjbVZ5TFdOaExYUnZiMnh6TFRZMU9EUmtZMlEwTmpR
      dGRuSjJkSE13Z1lrR0NDb0RCQVVHQndnQkJIMTcKSW1GMGRISnpJanA3SW1GaVlXTXVhVzVwZENJ
      NkluUnlkV1VpTENKaFpHMXBiaUk2SW5SeWRXVWlMQ0pvWmk1QgpabVpwYkdsaGRHbHZiaUk2SWlJ
      c0ltaG1Ma1Z1Y205c2JHMWxiblJKUkNJNklrRmtiV2x1UUhOMWNIQnNlV05vCllXbHVMVzVsZENJ
      c0ltaG1MbFI1Y0dVaU9pSmhaRzFwYmlKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQnAKRVA1
      cWJqeHpzQmdwTzVzd2t5NlQza3QybDBPQUFvMkd4cjhJMTgwemZRSWdVTnp1MlRBVk1xMDluZEJw
      MkxrVgpSU21Bd1FMM2R4WEJzY3Ivbk9ET2xWRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpC
      DgoEU0hBMhIGU0hBMjU2StMGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTRENDQWU2
      Z0F3SUJBZ0lVVjlSbUtjNEcrRFJ1bDVDQVBRVkJ0QTJqTXUwd0NnWUlLb1pJemowRUF3SXcKZ1lF
      eEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2
      Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pYSmxjakUrTUR3R0ExVUVBd3cxWTJFdWMzVndjR3g1
      WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTVq
      YjIwd0hoY05Nakl3TnpFME1EWTAKTXpBeldoY05NalV3TlRBek1EWTBNekF6V2pDQmdURUxNQWtH
      QTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dgpibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1
      TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVQ0d1BBWURWUVFECkREVmpZUzV6ZFhCd2JIbGphR0Zw
      YmkxdVpYUXVhR1l1WkdWdGJ5NWhkM011WW14dlkydGphR0ZwYm1Oc2IzVmsKY0c5akxtTnZiVEJa
      TUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCUHVmWGx5YkZJb0ZLSmhHc0hmZApFWW91
      Z0ZQZjY4VWZ1b0VDSzdMOVAvbFhpYVlZUG1teStVSmc2bjR3MEdLUlN2SU1JNjNMVk1MTUJPbzM3
      cExjCkw3ZWpRakJBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21N
      QjBHQTFVZERnUVcKQkJTajZpZ0YyZ2UzSXhISlNJYWJFVDJKakVZQVhUQUtCZ2dxaGtqT1BRUURB
      Z05JQURCRkFpQnl6ZWJQWTNQUgpKNUNUT0drK0FzN1FQWHZMUE0zOEY5eE1yTEFFOHZKSXZnSWhB
      TnZ4SUU3bk43MG9yM09OZkg4aVBLdlhFYytGCndSd2Z6eHF1aEFkekF3L2gKLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoaBkFkbWlucxqvAQoJRW5kcG9pbnRzEqEBEpYBCjBvcmRlcmVyMS5oZi5k
      ZW1vLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MuY29tOjg0NDMKMG9yZGVyZXIyLmhmLmRlbW8uYXdz
      LmJsb2NrY2hhaW5jbG91ZHBvYy5jb206ODQ0Mwowb3JkZXJlcjMuaGYuZGVtby5hd3MuYmxvY2tj
      aGFpbmNsb3VkcG9jLmNvbTo4NDQzGgZBZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggSBggBEgII
      ABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIGCAESAggA
      GhQSEgoOc3VwcGx5Y2hhaW5NU1AQARoGQWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggBEh4SCBIG
      CAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyI3CgdSZWFkZXJzEiwSIggBEh4SCBIG
      CAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIV
      EgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoT
      Q2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8w
      EgAaBkFkbWlucxr5OAoNQ29uc2Vuc3VzVHlwZRLnOBLcOAoIZXRjZHJhZnQSzzgK5hIKK29yZGVy
      ZXIxLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb20Q+0EamAktLS0tLUJFR0lOIENF
      UlRJRklDQVRFLS0tLS0KTUlJRE9EQ0NBdDZnQXdJQkFnSVVTbTBwRkxHQURCaFN2emZodGlKK3ZV
      Q1BOYjR3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURB
      Wk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNq
      RStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxt
      SnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURjdwpNekF3V2hjTk1q
      TXdOekUwTURjd09EQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5U
      QXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdk
      dmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhR
      d1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUitLNUZhdmpuaUVJNkI2dEpMNFE3
      NiszQS9vdkVJcjhEbjhQTmUxL2hWCkJiRS9uckFFNXpZRVhBQXZRQTNqZHIySnA3RTFySk9rVVBW
      S0t4cnUyZEZQbzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJR
      R0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdR
      V0JCUW0zaDBvNHB3eklVMFkzemJTVkk4QjV1N1ltVEFmQmdOVkhTTUVHREFXCmdCU2o2aWdGMmdl
      M0l4SEpTSWFiRVQySmpFWUFYVEJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TVM1emRYQncKYkhs
      amFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJeExtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVq
      Ykc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1pt
      YVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzV6
      ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dx
      aGtqT1BRUURBZ05JQURCRkFpRUEwandkMnlpagp5WTJIV3VhUGttUExoSDZ0bXAzbWhpa01Vd1dq
      QjRvNjU5MENJRy8yTW13dmlESEFKMlIxOUJSVm9ZYWdCTkpNCnBQRU5qRHAxV0VBWEwrTmEKLS0t
      LS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoimAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJ
      RE9EQ0NBdDZnQXdJQkFnSVVTbTBwRkxHQURCaFN2emZodGlKK3ZVQ1BOYjR3Q2dZSUtvWkl6ajBF
      QXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05W
      QkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1
      YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkx
      WkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURjdwpNekF3V2hjTk1qTXdOekUwTURjd09EQXdXakJ4
      TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1
      TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lE
      VlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlC
      QmdncWhrak9QUU1CQndOQ0FBUitLNUZhdmpuaUVJNkI2dEpMNFE3NiszQS9vdkVJcjhEbjhQTmUx
      L2hWCkJiRS9uckFFNXpZRVhBQXZRQTNqZHIySnA3RTFySk9rVVBWS0t4cnUyZEZQbzRJQlFUQ0NB
      VDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JC
      Z0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUW0zaDBvNHB3eklVMFkz
      emJTVkk4QjV1N1ltVEFmQmdOVkhTTUVHREFXCmdCU2o2aWdGMmdlM0l4SEpTSWFiRVQySmpFWUFY
      VEJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TVM1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXla
      R1Z5WlhJeExtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdi
      QVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlM
      Q0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpY
      UWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFp
      RUEwandkMnlpagp5WTJIV3VhUGttUExoSDZ0bXAzbWhpa01Vd1dqQjRvNjU5MENJRy8yTW13dmlE
      SEFKMlIxOUJSVm9ZYWdCTkpNCnBQRU5qRHAxV0VBWEwrTmEKLS0tLS1FTkQgQ0VSVElGSUNBVEUt
      LS0tLQoK5hIKK29yZGVyZXIyLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb20Q+0Ea
      mAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE9EQ0NBdDZnQXdJQkFnSVVDdXV5SjVE
      UVl0VjBUbzQxckhrTFVCNmZZejh3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtk
      Q01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFV
      RUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1o
      bUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUw
      TURjdwpNekF3V2hjTk1qTXdOekUwTURjd09EQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtH
      QTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5
      TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1pNXpkWEJ3
      YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUitrRGNH
      MVZzeDlzUkx3d05UcENsUVhTQ2Q4eTliZzZLYXAyWjkvMGNLClRaMDB5MzJaOUIrZ1VCRUxBdmdt
      d1JBczJOY3I2U0F0UmVldHlpaFlVZ2x5bzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09v
      TUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhF
      QWpBQU1CMEdBMVVkRGdRV0JCUVYvcXhSdnhvMmE0cnB1TUliUlFSYVJrVDJnekFmQmdOVkhTTUVH
      REFXCmdCU2o2aWdGMmdlM0l4SEpTSWFiRVQySmpFWUFYVEJRQmdOVkhSRUVTVEJIZ2hodmNtUmxj
      bVZ5TWk1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJeUxtaG1MbVJsYlc4dVlYZHpM
      bUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBj
      bk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlP
      aUp2Y21SbGNtVnlNaTV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmta
      WEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUExT1hCL1VtUAowTkNGTjBlNG9FaHV0
      Y0U0cHIrYzJONnp4ZGE0ZzNSbUNaZ0NJQlhvSWhETUFjL01ncFQzTHJVdmF3QmpMYUlCCktia2pv
      SzYxUE5EbVBpZ3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoimAktLS0tLUJFR0lOIENFUlRJ
      RklDQVRFLS0tLS0KTUlJRE9EQ0NBdDZnQXdJQkFnSVVDdXV5SjVEUVl0VjBUbzQxckhrTFVCNmZZ
      ejh3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1i
      MjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStN
      RHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNi
      Mk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURjdwpNekF3V2hjTk1qTXdO
      ekUwTURjd09EQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZM
      VEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNt
      UmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1pNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dU
      QVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUitrRGNHMVZzeDlzUkx3d05UcENsUVhT
      Q2Q4eTliZzZLYXAyWjkvMGNLClRaMDB5MzJaOUIrZ1VCRUxBdmdtd1JBczJOY3I2U0F0UmVldHlp
      aFlVZ2x5bzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0ND
      c0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JC
      UVYvcXhSdnhvMmE0cnB1TUliUlFSYVJrVDJnekFmQmdOVkhTTUVHREFXCmdCU2o2aWdGMmdlM0l4
      SEpTSWFiRVQySmpFWUFYVEJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TWk1emRYQncKYkhsamFH
      RnBiaTF1WlhTQ0syOXlaR1Z5WlhJeUxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5
      MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4
      cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTV6ZFhC
      d2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtq
      T1BRUURBZ05JQURCRkFpRUExT1hCL1VtUAowTkNGTjBlNG9FaHV0Y0U0cHIrYzJONnp4ZGE0ZzNS
      bUNaZ0NJQlhvSWhETUFjL01ncFQzTHJVdmF3QmpMYUlCCktia2pvSzYxUE5EbVBpZ3gKLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoK5hIKK29yZGVyZXIzLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5j
      bG91ZHBvYy5jb20Q+0EamAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE56Q0NBdDZn
      QXdJQkFnSVVYWHlPUmpCQWtSQVhnZXRLbFJ3NWRic2Q3L013Q2dZSUtvWkl6ajBFQXdJdwpnWUV4
      Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZi
      bVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZ
      MmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpi
      MjB3SGhjTk1qSXdOekUwTURjdwpNekF3V2hjTk1qTXdOekUwTURjd09EQXdXakJ4TVFzd0NRWURW
      UVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURW
      UVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZj
      bVJsY21WeU15NXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9Q
      UU1CQndOQ0FBUUF1MXNiYlBlSUpac0paQnY1RW5sTUZ0UlJOK3ZtU25vbC9POVpqcVBHCjc1Q24v
      eFZ2VVA1dEoweUtuQU5ZQWp1UFpYZVYwQks1alBhcExxZkF3cjFTbzRJQlFUQ0NBVDB3RGdZRFZS
      MFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFq
      QU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVDFMeFk4RjZDcHVQVWRFb0lkTGkvTUps
      YjVoakFmQmdOVkhTTUVHREFXCmdCU2o2aWdGMmdlM0l4SEpTSWFiRVQySmpFWUFYVEJRQmdOVkhS
      RUVTVEJIZ2hodmNtUmxjbVZ5TXk1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJekxt
      aG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJR
      WUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJu
      SnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1pp
      NVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQWRvbzNLVm9Y
      dwpaOEd4NU9UUmZTblRzbjNDYnpOaWNwNzNiU3Vpb0IxV01RSWdaMmU4NmhoVkJ0SmFHY3lBVWtW
      UFRuUEI2ZlcyCjVRTlZJYU9yWjBRZ05Waz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoimAkt
      LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE56Q0NBdDZnQXdJQkFnSVVYWHlPUmpCQWtS
      QVhnZXRLbFJ3NWRic2Q3L013Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01R
      OHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNn
      d0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxt
      UmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURj
      dwpNekF3V2hjTk1qTXdOekUwTURjd09EQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFV
      RUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJB
      d0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU15NXpkWEJ3Ykhs
      amFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUUF1MXNiYlBl
      SUpac0paQnY1RW5sTUZ0UlJOK3ZtU25vbC9POVpqcVBHCjc1Q24veFZ2VVA1dEoweUtuQU5ZQWp1
      UFpYZVYwQks1alBhcExxZkF3cjFTbzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIw
      R0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCVDFMeFk4RjZDcHVQVWRFb0lkTGkvTUpsYjVoakFmQmdOVkhTTUVHREFX
      CmdCU2o2aWdGMmdlM0l4SEpTSWFiRVQySmpFWUFYVEJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5
      TXk1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJekxtaG1MbVJsYlc4dVlYZHpMbUpz
      YjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1p
      T25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2
      Y21SbGNtVnlNeTV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEps
      Y2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQWRvbzNLVm9YdwpaOEd4NU9UUmZTblRzbjND
      YnpOaWNwNzNiU3Vpb0IxV01RSWdaMmU4NmhoVkJ0SmFHY3lBVWtWUFRuUEI2ZlcyCjVRTlZJYU9y
      WjBRZ05Waz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICACBoG
      QWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIioKD0Jsb2NrVmFsaWRh
      dGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJz
      GgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMqBkFkbWlucxKeGgoL
      Q29uc29ydGl1bXMSjhoSwxkKFVN1cHBseUNoYWluQ29uc29ydGl1bRKpGRLLGAoOc3VwcGx5Y2hh
      aW5NU1ASuBgaxBYKA01TUBK8FhKxFhKuFgoOc3VwcGx5Y2hhaW5NU1AS0wYtLS0tLUJFR0lOIENF
      UlRJRklDQVRFLS0tLS0KTUlJQ1NEQ0NBZTZnQXdJQkFnSVVWOVJtS2M0RytEUnVsNUNBUFFWQnRB
      MmpNdTB3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURB
      Wk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNq
      RStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxt
      SnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURZMApNekF6V2hjTk1q
      VXdOVEF6TURZME16QXpXakNCZ1RFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2CmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNVDR3UEFZ
      RFZRUUQKRERWallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdWFHWXVaR1Z0Ynk1aGQzTXVZbXh2WTJ0
      amFHRnBibU5zYjNWawpjRzlqTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJ
      QUJQdWZYbHliRklvRktKaEdzSGZkCkVZb3VnRlBmNjhVZnVvRUNLN0w5UC9sWGlhWVlQbW15K1VK
      ZzZuNHcwR0tSU3ZJTUk2M0xWTUxNQk9vMzdwTGMKTDdlalFqQkFNQThHQTFVZEV3RUIvd1FGTUFN
      QkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRVwpCQlNqNmlnRjJnZTNJeEhKU0lh
      YkVUMkpqRVlBWFRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCeXplYlBZM1BSCko1Q1RPR2srQXM3
      UVBYdkxQTTM4Rjl4TXJMQUU4dkpJdmdJaEFOdnhJRTduTjcwb3IzT05mSDhpUEt2WEVjK0YKd1J3
      Znp4cXVoQWR6QXcvaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLfCC0tLS0tQkVHSU4gQ0VS
      VElGSUNBVEUtLS0tLQpNSUlERFRDQ0FyU2dBd0lCQWdJVVJqaUg2a3FGRTFGQnd1dUpMQ3FFZmhq
      Y0FzQXdDZ1lJS29aSXpqMEVBd0l3CmdZRXhDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJREFa
      TWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnYKYmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pF
      K01Ed0dBMVVFQXd3MVkyRXVjM1Z3Y0d4NVkyaGhhVzR0Ym1WMApMbWhtTG1SbGJXOHVZWGR6TG1K
      c2IyTnJZMmhoYVc1amJHOTFaSEJ2WXk1amIyMHdIaGNOTWpJd056RTBNRGN3Ck16QXdXaGNOTWpN
      d056RTBNRGN3T0RBd1dqQnNNUXN3Q1FZRFZRUUdFd0pIUWpFYk1Ca0dBMVVFQnhNU05URXUKTlRB
      dkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtFd2RQY21SbGNtVnlNUTR3REFZRFZRUUxFd1Zo
      WkcxcApiakVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFjM1Z3Y0d4NVkyaGhhVzR0Ym1WME1Ga3dFd1lI
      S29aSXpqMENBUVlJCktvWkl6ajBEQVFjRFFnQUUwY2c4OGlDNWZ6L0JwR3RKaWQ1YTVBMXRVOEhj
      UjdXWEs4MzNtVUdoSjJzZGZSbFYKL1JIN2xqTmxvekR5UDFDL1pkSHhuQjVMTWpVSW5yMXBiNVRx
      K3FPQ0FSd3dnZ0VZTUE0R0ExVWREd0VCL3dRRQpBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBH
      QTFVZERnUVdCQlM4ZlQrREsreVlSNVRSQ0w0UTZ1Nld4WGRYClVEQWZCZ05WSFNNRUdEQVdnQlNq
      NmlnRjJnZTNJeEhKU0lhYkVUMkpqRVlBWFRBc0JnTlZIUkVFSlRBamdpRnYKY21SbGNtVnlMV05o
      TFhSdmIyeHpMVFkxT0RSa1kyUTBOalF0ZG5KMmRITXdnWWtHQ0NvREJBVUdCd2dCQkgxNwpJbUYw
      ZEhKeklqcDdJbUZpWVdNdWFXNXBkQ0k2SW5SeWRXVWlMQ0poWkcxcGJpSTZJblJ5ZFdVaUxDSm9a
      aTVCClptWnBiR2xoZEdsdmJpSTZJaUlzSW1obUxrVnVjbTlzYkcxbGJuUkpSQ0k2SWtGa2JXbHVR
      SE4xY0hCc2VXTm8KWVdsdUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Fo
      a2pPUFFRREFnTkhBREJFQWlCcApFUDVxYmp4enNCZ3BPNXN3a3k2VDNrdDJsME9BQW8yR3hyOEkx
      ODB6ZlFJZ1VOenUyVEFWTXEwOW5kQnAyTGtWClJTbUF3UUwzZHhYQnNjci9uT0RPbFZFPQotLS0t
      LUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK0wYtLS0tLUJFR0lOIENFUlRJ
      RklDQVRFLS0tLS0KTUlJQ1NEQ0NBZTZnQXdJQkFnSVVWOVJtS2M0RytEUnVsNUNBUFFWQnRBMmpN
      dTB3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1i
      MjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStN
      RHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNi
      Mk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekUwTURZMApNekF6V2hjTk1qVXdO
      VEF6TURZME16QXpXakNCZ1RFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2CmJtUnZi
      akVQTUEwR0ExVUVCd3dHVEc5dVpHOXVNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNVDR3UEFZRFZR
      UUQKRERWallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdWFHWXVaR1Z0Ynk1aGQzTXVZbXh2WTJ0amFH
      RnBibU5zYjNWawpjRzlqTG1OdmJUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJQ
      dWZYbHliRklvRktKaEdzSGZkCkVZb3VnRlBmNjhVZnVvRUNLN0w5UC9sWGlhWVlQbW15K1VKZzZu
      NHcwR0tSU3ZJTUk2M0xWTUxNQk9vMzdwTGMKTDdlalFqQkFNQThHQTFVZEV3RUIvd1FGTUFNQkFm
      OHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRVwpCQlNqNmlnRjJnZTNJeEhKU0lhYkVU
      MkpqRVlBWFRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCeXplYlBZM1BSCko1Q1RPR2srQXM3UVBY
      dkxQTTM4Rjl4TXJMQUU4dkpJdmdJaEFOdnhJRTduTjcwb3IzT05mSDhpUEt2WEVjK0YKd1J3Znp4
      cXVoQWR6QXcvaAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjgKBkFkbWlucxIu
      EiQIARIgEggSBggBEgIIABoUEhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7CgtFbmRvcnNl
      bWVudBIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHUmVh
      ZGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHV3Jp
      dGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMqBkFkbWlu
      cxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcvQ2hhbm5lbC9PcmRl
      cmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5zEiMSCAgBEgQSAhIA
      GhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaLQoZQmxv
      Y2tEYXRhSGFzaGluZ1N0cnVjdHVyZRIQEgYI/////w8aBkFkbWlucxrHAQoQT3JkZXJlckFkZHJl
      c3NlcxKyARKWAQowb3JkZXJlcjEuaGYuZGVtby5hd3MuYmxvY2tjaGFpbmNsb3VkcG9jLmNvbTo4
      NDQzCjBvcmRlcmVyMi5oZi5kZW1vLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MuY29tOjg0NDMKMG9y
      ZGVyZXIzLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb206ODQ0MxoXL0NoYW5uZWwv
      T3JkZXJlci9BZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAaBkFkbWlucxomChBI
      YXNoaW5nQWxnb3JpdGhtEhISCAoGU0hBMjU2GgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFk
      bWlucxACGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3Jp
      dGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
