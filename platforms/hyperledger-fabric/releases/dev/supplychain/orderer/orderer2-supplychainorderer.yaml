apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer2
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer2
  chart:
    git: git@github.com:suvajit-sarkar/blockchain-automation-framework.git
    ref: workspace
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: adopblockchaincloud0502.azurecr.io/alpine-utils:1.0
    orderer:
      name: orderer2
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://vault.internal.demo.aws.blockchaincloudpoc.com:9001
      role: vault-role
      authpath: demo-fabricsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer2.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: haproxy
      external_url_suffix: hf.demo.aws.blockchaincloudpoc.com

    genesis: |-
      CiIaIP8SrNct9DQKvNyFolEEgbfY+gZIJO0AdFQNvbekzlJREvlyCvZyCvNyCngKWggBEAEaBgiu
      1oqXBiIKc3lzY2hhbm5lbCpAN2Y2NDIwMGQ1ZTY2ZGY4YzUxNzJmMTEzOWE3MTkwMDAzNzZiMDJh
      NmVhODQ5ZDM2NWJkMzlmMjJhNmJjMWFlNxIaEhgsH0SJFQTmY6jo2Zap/R8sPBbXcZ5rsUAS9nEK
      83ES8HESiVQKB09yZGVyZXIS/VMS0xgKDnN1cHBseWNoYWluTVNQEsAYGswWCgNNU1ASxBYSuRYS
      thYKDnN1cHBseWNoYWluTVNQEtcGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNTVEND
      QWU2Z0F3SUJBZ0lVS0gxenRUaUt6NkNSdWFNakkzMXNvZmd5UEZBd0NnWUlLb1pJemowRUF3SXcK
      Z1lFeEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01C
      a3h2Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pYSmxjakUrTUR3R0ExVUVBd3cxWTJFdWMzVndj
      R3g1WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZ
      eTVqYjIwd0hoY05Nakl3TnpJNE1UVXgKTmpVMFdoY05NalV3TlRFM01UVXhOalUwV2pDQmdURUxN
      QWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dgpibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVQ0d1BBWURWUVFECkREVmpZUzV6ZFhCd2JIbGph
      R0ZwYmkxdVpYUXVhR1l1WkdWdGJ5NWhkM011WW14dlkydGphR0ZwYm1Oc2IzVmsKY0c5akxtTnZi
      VEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSUdUbCtld2s1ZDBZNnN6Vi9hNwpM
      ZlhnTDZSWWU1T3Vpd3lUL0IwdnRqU3ZRbm95Y045MkV1bS9VWG5WTi8va0J2d2lRY1lNSTlybCtP
      Z1pPRGFHCjFST2pRakJBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFn
      R21NQjBHQTFVZERnUVcKQkJTOGNOY0VJUU8ydEhzYnBxMXJwZFRidUR6MXF6QUtCZ2dxaGtqT1BR
      UURBZ05KQURCR0FpRUF4SStEYWIrSApaRDM2K0ZsMjNaZnltY2dTakJOMkJ5L1orbjBqRDBnSkl1
      Z0NJUUN1a1VsQ2U4WGpoTEdHTkkwK3E5Y0NoU1RQCnpuMGkyT3o0NGlWYW1kdzd0Zz09Ci0tLS0t
      RU5EIENFUlRJRklDQVRFLS0tLS0KIt8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURE
      akNDQXJTZ0F3SUJBZ0lVZkRzR2x0REpNM09wTTFsaVg1dGZGb3NwMnl3d0NnWUlLb1pJemowRUF3
      SXcKZ1lFeEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJB
      Y01Ca3h2Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pYSmxjakUrTUR3R0ExVUVBd3cxWTJFdWMz
      VndjR3g1WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpI
      QnZZeTVqYjIwd0hoY05Nakl3TnpJNE1UVXkKTURBd1doY05Nak13TnpJNE1UVXlOVEF3V2pCc01R
      c3dDUVlEVlFRR0V3SkhRakViTUJrR0ExVUVCeE1TTlRFdQpOVEF2TFRBdU1UTXZURzl1Wkc5dU1S
      QXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHdEQVlEVlFRTEV3VmhaRzFwCmJqRWVNQndHQTFVRUF3
      d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUkKS29aSXpq
      MERBUWNEUWdBRVZQaUJydFhTMUNQbDltT3VTSWdLY3huT05TTUZWTWRNRE0vLzJoSEQvcnlUVDlU
      TwpLTkVRK1daYWRlanNKVEJyd1VSS1dUZmt0SS9Tb0ZFbzhSc0RiYU9DQVJ3d2dnRVlNQTRHQTFV
      ZER3RUIvd1FFCkF3SUhnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUVBHaUg1K3Uw
      MzIxK3hCbHpnRkd6cXE3YjUKaGpBZkJnTlZIU01FR0RBV2dCUzhjTmNFSVFPMnRIc2JwcTFycGRU
      YnVEejFxekFzQmdOVkhSRUVKVEFqZ2lGdgpjbVJsY21WeUxXTmhMWFJ2YjJ4ekxUVm1ZemMxTmpo
      a04yTXRkR2R1YTJJd2dZa0dDQ29EQkFVR0J3Z0JCSDE3CkltRjBkSEp6SWpwN0ltRmlZV011YVc1
      cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1VpTENKb1ppNUIKWm1acGJHbGhkR2x2YmlJ
      NklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0ZrYldsdVFITjFjSEJzZVdObwpZV2x1TFc1
      bGRDSXNJbWhtTGxSNWNHVWlPaUpoWkcxcGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUVB
      CnFIODk3YlFHMWUxTEZoandNUXBqQWhmUXVpWE9JVWNFaTgybmVpTHlKSlFDSUZSSWlqaHZMR3JY
      eEZFYkFnOU4KMWNQS0Z6bTNUMUxFUDd6RXFXbzZrTXJxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KQg4KBFNIQTISBlNIQTI1NkrXBi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDU1RD
      Q0FlNmdBd0lCQWdJVUtIMXp0VGlLejZDUnVhTWpJMzFzb2ZneVBGQXdDZ1lJS29aSXpqMEVBd0l3
      CmdZRXhDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNN
      Qmt4dmJtUnYKYmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEpsY2pFK01Ed0dBMVVFQXd3MVkyRXVjM1Z3
      Y0d4NVkyaGhhVzR0Ym1WMApMbWhtTG1SbGJXOHVZWGR6TG1Kc2IyTnJZMmhoYVc1amJHOTFaSEJ2
      WXk1amIyMHdIaGNOTWpJd056STRNVFV4Ck5qVTBXaGNOTWpVd05URTNNVFV4TmpVMFdqQ0JnVEVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHYKYm1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1
      Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1UNHdQQVlEVlFRRApERFZqWVM1emRYQndiSGxq
      YUdGcGJpMXVaWFF1YUdZdVpHVnRieTVoZDNNdVlteHZZMnRqYUdGcGJtTnNiM1ZrCmNHOWpMbU52
      YlRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQklHVGwrZXdrNWQwWTZzelYvYTcK
      TGZYZ0w2UlllNU91aXd5VC9CMHZ0alN2UW5veWNOOTJFdW0vVVhuVk4vL2tCdndpUWNZTUk5cmwr
      T2daT0RhRwoxUk9qUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURB
      Z0dtTUIwR0ExVWREZ1FXCkJCUzhjTmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekFLQmdncWhrak9Q
      UVFEQWdOSkFEQkdBaUVBeEkrRGFiK0gKWkQzNitGbDIzWmZ5bWNnU2pCTjJCeS9aK24wakQwZ0pJ
      dWdDSVFDdWtVbENlOFhqaExHR05JMCtxOWNDaFNUUAp6bjBpMk96NDRpVmFtZHc3dGc9PQotLS0t
      LUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjgKBkFkbWlucxIuEiQIARIgEggSBggBEgII
      ABoUEhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7CgtFbmRvcnNlbWVudBIsEiIIARIeEggS
      BggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHUmVhZGVycxIsEiIIARIeEggS
      BggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggS
      BggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1pbnMqBkFkbWlucxr5OAoNQ29uc2Vuc3Vz
      VHlwZRLnOBLcOAoIZXRjZHJhZnQSzzgK5hIKK29yZGVyZXIxLmhmLmRlbW8uYXdzLmJsb2NrY2hh
      aW5jbG91ZHBvYy5jb20Q+0EamAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE56Q0NB
      dDZnQXdJQkFnSVVZQ1BNMEdlekpHKzRTY3NWano2dXBLSWNVM3d3Q2dZSUtvWkl6ajBFQXdJdwpn
      WUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJr
      eHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NH
      eDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5
      NWpiMjB3SGhjTk1qSXdOekk0TVRVeQpNREF3V2hjTk1qTXdOekk0TVRVeU5UQXdXakJ4TVFzd0NR
      WURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0Rn
      WURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4
      aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhr
      ak9QUU1CQndOQ0FBUU1LK3pac24yWVhBNFZTZlBZMkVrbEUrMlFRTTZWZ3VwcndmSEY1eFFqCmFs
      SEM2WDUreWRUbjJRa0J1U1hBWloycW5jd2VMWHZDd1duZk8yd04wQkRmbzRJQlFUQ0NBVDB3RGdZ
      RFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFj
      REFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWdsd1NPRlBoa3hkZ1BQSDVjdWJ6
      ZVZkd2w1akFmQmdOVkhTTUVHREFXCmdCUzhjTmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekJRQmdO
      VkhSRUVTVEJIZ2hodmNtUmxjbVZ5TVM1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJ
      eExtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dN
      RUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1
      RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENK
      b1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQTUyNmhy
      bG8yYgpnY00zUFpzTDZQV0dCU29PMnFZbklvMFFjWnhNWjdIRDB3SWdmMTkvdTNWTlZnNW1CRE5N
      NVZKc0hKbHpMWFcvCkNrSWpUVGcyUCt2emhQaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi
      mAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE56Q0NBdDZnQXdJQkFnSVVZQ1BNMEdl
      ekpHKzRTY3NWano2dXBLSWNVM3d3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtk
      Q01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFV
      RUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1o
      bUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekk0
      TVRVeQpNREF3V2hjTk1qTXdOekk0TVRVeU5UQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtH
      QTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5
      TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3
      YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBUU1LK3pa
      c24yWVhBNFZTZlBZMkVrbEUrMlFRTTZWZ3VwcndmSEY1eFFqCmFsSEM2WDUreWRUbjJRa0J1U1hB
      WloycW5jd2VMWHZDd1duZk8yd04wQkRmbzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09v
      TUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhF
      QWpBQU1CMEdBMVVkRGdRV0JCUWdsd1NPRlBoa3hkZ1BQSDVjdWJ6ZVZkd2w1akFmQmdOVkhTTUVH
      REFXCmdCUzhjTmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekJRQmdOVkhSRUVTVEJIZ2hodmNtUmxj
      bVZ5TVM1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJeExtaG1MbVJsYlc4dVlYZHpM
      bUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBj
      bk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlP
      aUp2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmta
      WEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQTUyNmhybG8yYgpnY00zUFpzTDZQV0dC
      U29PMnFZbklvMFFjWnhNWjdIRDB3SWdmMTkvdTNWTlZnNW1CRE5NNVZKc0hKbHpMWFcvCkNrSWpU
      VGcyUCt2emhQaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoK5hIKK29yZGVyZXIyLmhmLmRl
      bW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb20Q+0EamAktLS0tLUJFR0lOIENFUlRJRklDQVRF
      LS0tLS0KTUlJRE56Q0NBdDZnQXdJQkFnSVVJSWF1dXdnT1U3MHlLQWZHVVhkcXVtWHVadjB3Q2dZ
      SUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0
      eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFV
      RUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJo
      aGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekk0TVRVeQpNREF3V2hjTk1qTXdOekk0TVRV
      eU5UQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRN
      dlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21W
      eU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1pNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2Nx
      aGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBVEVtRlpMM3RJdTl5aE1HQ2VDVkRLTFJIb3Y0OXBG
      cFNRamtnekgzVm1wCmpNdXM3QzZ2ZGxDTTBLMU14WVh3ZjA5aU45VE1HYlliUFRMTUZUU1RmSGRm
      bzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVG
      QndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUjBNQUNi
      YndaYkdKU1J6d1lPM3g1K0tFK21VREFmQmdOVkhTTUVHREFXCmdCUzhjTmNFSVFPMnRIc2JwcTFy
      cGRUYnVEejFxekJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TWk1emRYQncKYkhsamFHRnBiaTF1
      WlhTQ0syOXlaR1Z5WlhJeUxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2
      WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBi
      MjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTV6ZFhCd2JIbGph
      R0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURB
      Z05IQURCRUFpQkxYVXBaTEZWVgprVlE3Q0FmVVFrMEpFSW1kNm5mMTNHWnhWbDliTHQ2OVhRSWdK
      ZGZvMi9ORU8ycGV6STF6N3JKM2tWTzJXQmdYCk9GaHhNY2JlUWV5ZFhOTT0KLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoimAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE56Q0NBdDZn
      QXdJQkFnSVVJSWF1dXdnT1U3MHlLQWZHVVhkcXVtWHVadjB3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4
      Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZi
      bVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZ
      MmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpi
      MjB3SGhjTk1qSXdOekk0TVRVeQpNREF3V2hjTk1qTXdOekk0TVRVeU5UQXdXakJ4TVFzd0NRWURW
      UVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURW
      UVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZj
      bVJsY21WeU1pNXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9Q
      UU1CQndOQ0FBVEVtRlpMM3RJdTl5aE1HQ2VDVkRLTFJIb3Y0OXBGcFNRamtnekgzVm1wCmpNdXM3
      QzZ2ZGxDTTBLMU14WVh3ZjA5aU45VE1HYlliUFRMTUZUU1RmSGRmbzRJQlFUQ0NBVDB3RGdZRFZS
      MFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFq
      QU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUjBNQUNiYndaYkdKU1J6d1lPM3g1K0tF
      K21VREFmQmdOVkhTTUVHREFXCmdCUzhjTmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekJRQmdOVkhS
      RUVTVEJIZ2hodmNtUmxjbVZ5TWk1emRYQncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJeUxt
      aG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJR
      WUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJu
      SnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNaTV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1pp
      NVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQkxYVXBaTEZW
      VgprVlE3Q0FmVVFrMEpFSW1kNm5mMTNHWnhWbDliTHQ2OVhRSWdKZGZvMi9ORU8ycGV6STF6N3JK
      M2tWTzJXQmdYCk9GaHhNY2JlUWV5ZFhOTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoK5hIK
      K29yZGVyZXIzLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb20Q+0EamAktLS0tLUJF
      R0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE9EQ0NBdDZnQXdJQkFnSVVBeGxOVWlXM0ZsVG5HQ0Iv
      QjhLMmVhMzJhckV3Q2dZSUtvWkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlE
      VlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0pr
      WlhKbGNqRStNRHdHQTFVRUF3dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1
      WVhkekxtSnNiMk5yWTJoaGFXNWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekk0TVRVeQpNREF3
      V2hjTk1qTXdOekk0TVRVeU5UQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNO
      VEV1Ck5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURW
      UVFMRXdkdmNtUmwKY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU15NXpkWEJ3YkhsamFHRnBi
      aTF1WlhRd1dUQVRCZ2NxaGtqTwpQUUlCQmdncWhrak9QUU1CQndOQ0FBVHdwcEY2TjZlWlBkUElp
      Ymx0S1lPVStpUXdEcklycksrc0wveHlaMEdHClVNTjZPSVJndWdQVWpkT21ZVG5SSlJXeElOWmhk
      TkU4TkFHSXZlQytZSWR6bzRJQlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRK
      UVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdB
      MVVkRGdRV0JCUmFSaWpsRHByeVhvdm5HSER4RzE3RzNzeWo5REFmQmdOVkhTTUVHREFXCmdCUzhj
      TmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TXk1emRY
      QncKYkhsamFHRnBiaTF1WlhTQ0syOXlaR1Z5WlhJekxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclky
      aGhhVzVqYkc5MQpaSEJ2WXk1amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFH
      WXVRV1ptYVd4cFlYUnBiMjRpCk9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNt
      VnlNeTV6ZFhCd2JIbGphR0ZwYmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZU
      QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUF4NTBHWGlDTgo2Mis5N1hoRjF4OTY4WnBKK2RuNVZq
      U0lqbSt1WmZCaWt2MENJRksyTHNmNE5qWHUyL29PbXFacmlvU3h5NHROCkk5YUpRaVJnemp6VTJF
      N2kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoimAktLS0tLUJFR0lOIENFUlRJRklDQVRFLS0t
      LS0KTUlJRE9EQ0NBdDZnQXdJQkFnSVVBeGxOVWlXM0ZsVG5HQ0IvQjhLMmVhMzJhckV3Q2dZSUtv
      Wkl6ajBFQXdJdwpnWUV4Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEVlFRSURBWk1iMjVrYjI0eER6
      QU5CZ05WQkFjTUJreHZibVJ2CmJqRVFNQTRHQTFVRUNnd0hUM0prWlhKbGNqRStNRHdHQTFVRUF3
      dzFZMkV1YzNWd2NHeDVZMmhoYVc0dGJtVjAKTG1obUxtUmxiVzh1WVhkekxtSnNiMk5yWTJoaGFX
      NWpiRzkxWkhCdll5NWpiMjB3SGhjTk1qSXdOekk0TVRVeQpNREF3V2hjTk1qTXdOekk0TVRVeU5U
      QXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWJNQmtHQTFVRUJ4TVNOVEV1Ck5UQXZMVEF1TVRNdlRH
      OXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBd0RnWURWUVFMRXdkdmNtUmwKY21WeU1T
      RXdId1lEVlFRREV4aHZjbVJsY21WeU15NXpkWEJ3YkhsamFHRnBiaTF1WlhRd1dUQVRCZ2NxaGtq
      TwpQUUlCQmdncWhrak9QUU1CQndOQ0FBVHdwcEY2TjZlWlBkUElpYmx0S1lPVStpUXdEcklycksr
      c0wveHlaMEdHClVNTjZPSVJndWdQVWpkT21ZVG5SSlJXeElOWmhkTkU4TkFHSXZlQytZSWR6bzRJ
      QlFUQ0NBVDB3RGdZRFZSMFAKQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndN
      QkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUmFSaWpsRHBy
      eVhvdm5HSER4RzE3RzNzeWo5REFmQmdOVkhTTUVHREFXCmdCUzhjTmNFSVFPMnRIc2JwcTFycGRU
      YnVEejFxekJRQmdOVkhSRUVTVEJIZ2hodmNtUmxjbVZ5TXk1emRYQncKYkhsamFHRnBiaTF1WlhT
      Q0syOXlaR1Z5WlhJekxtaG1MbVJsYlc4dVlYZHpMbUpzYjJOclkyaGhhVzVqYkc5MQpaSEJ2WXk1
      amIyMHdiQVlJS2dNRUJRWUhDQUVFWUhzaVlYUjBjbk1pT25zaWFHWXVRV1ptYVd4cFlYUnBiMjRp
      Ck9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUp2Y21SbGNtVnlNeTV6ZFhCd2JIbGphR0Zw
      YmkxdVpYUWkKTENKb1ppNVVlWEJsSWpvaWIzSmtaWEpsY2lKOWZUQUtCZ2dxaGtqT1BRUURBZ05J
      QURCRkFpRUF4NTBHWGlDTgo2Mis5N1hoRjF4OTY4WnBKK2RuNVZqU0lqbSt1WmZCaWt2MENJRksy
      THNmNE5qWHUyL29PbXFacmlvU3h5NHROCkk5YUpRaVJnemp6VTJFN2kKLS0tLS1FTkQgQ0VSVElG
      SUNBVEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICACBoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsI
      ChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoTQ2hh
      bm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAa
      BkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlk
      YXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVy
      cxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMSphoK
      C0NvbnNvcnRpdW1zEpYaEssZChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SsRkS0xgKDnN1cHBseWNo
      YWluTVNQEsAYGswWCgNNU1ASxBYSuRYSthYKDnN1cHBseWNoYWluTVNQEtcGLS0tLS1CRUdJTiBD
      RVJUSUZJQ0FURS0tLS0tCk1JSUNTVENDQWU2Z0F3SUJBZ0lVS0gxenRUaUt6NkNSdWFNakkzMXNv
      Zmd5UEZBd0NnWUlLb1pJemowRUF3SXcKZ1lFeEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZRUUlE
      QVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pYSmxj
      akUrTUR3R0ExVUVBd3cxWTJFdWMzVndjR3g1WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlYZHpM
      bUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTVqYjIwd0hoY05Nakl3TnpJNE1UVXgKTmpVMFdoY05N
      alV3TlRFM01UVXhOalUwV2pDQmdURUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dgpi
      bVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1TVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVQ0d1BB
      WURWUVFECkREVmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXVhR1l1WkdWdGJ5NWhkM011WW14dlky
      dGphR0ZwYm1Oc2IzVmsKY0c5akxtTnZiVEJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEw
      SUFCSUdUbCtld2s1ZDBZNnN6Vi9hNwpMZlhnTDZSWWU1T3Vpd3lUL0IwdnRqU3ZRbm95Y045MkV1
      bS9VWG5WTi8va0J2d2lRY1lNSTlybCtPZ1pPRGFHCjFST2pRakJBTUE4R0ExVWRFd0VCL3dRRk1B
      TUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVcKQkJTOGNOY0VJUU8ydEhzYnBx
      MXJwZFRidUR6MXF6QUtCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUF4SStEYWIrSApaRDM2K0ZsMjNa
      ZnltY2dTakJOMkJ5L1orbjBqRDBnSkl1Z0NJUUN1a1VsQ2U4WGpoTEdHTkkwK3E5Y0NoU1RQCnpu
      MGkyT3o0NGlWYW1kdzd0Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIt8ILS0tLS1CRUdJ
      TiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREakNDQXJTZ0F3SUJBZ0lVZkRzR2x0REpNM09wTTFsaVg1
      dGZGb3NwMnl3d0NnWUlLb1pJemowRUF3SXcKZ1lFeEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRFZR
      UUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdgpiakVRTUE0R0ExVUVDZ3dIVDNKa1pY
      SmxjakUrTUR3R0ExVUVBd3cxWTJFdWMzVndjR3g1WTJoaGFXNHRibVYwCkxtaG1MbVJsYlc4dVlY
      ZHpMbUpzYjJOclkyaGhhVzVqYkc5MVpIQnZZeTVqYjIwd0hoY05Nakl3TnpJNE1UVXkKTURBd1do
      Y05Nak13TnpJNE1UVXlOVEF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViTUJrR0ExVUVCeE1TTlRF
      dQpOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHdEQVlEVlFR
      TEV3VmhaRzFwCmJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      d0V3WUhLb1pJemowQ0FRWUkKS29aSXpqMERBUWNEUWdBRVZQaUJydFhTMUNQbDltT3VTSWdLY3hu
      T05TTUZWTWRNRE0vLzJoSEQvcnlUVDlUTwpLTkVRK1daYWRlanNKVEJyd1VSS1dUZmt0SS9Tb0ZF
      bzhSc0RiYU9DQVJ3d2dnRVlNQTRHQTFVZER3RUIvd1FFCkF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCUVBHaUg1K3UwMzIxK3hCbHpnRkd6cXE3YjUKaGpBZkJnTlZIU01FR0RB
      V2dCUzhjTmNFSVFPMnRIc2JwcTFycGRUYnVEejFxekFzQmdOVkhSRUVKVEFqZ2lGdgpjbVJsY21W
      eUxXTmhMWFJ2YjJ4ekxUVm1ZemMxTmpoa04yTXRkR2R1YTJJd2dZa0dDQ29EQkFVR0J3Z0JCSDE3
      CkltRjBkSEp6SWpwN0ltRmlZV011YVc1cGRDSTZJblJ5ZFdVaUxDSmhaRzFwYmlJNkluUnlkV1Vp
      TENKb1ppNUIKWm1acGJHbGhkR2x2YmlJNklpSXNJbWhtTGtWdWNtOXNiRzFsYm5SSlJDSTZJa0Zr
      YldsdVFITjFjSEJzZVdObwpZV2x1TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpoWkcxcGJpSjlmVEFL
      QmdncWhrak9QUVFEQWdOSUFEQkZBaUVBCnFIODk3YlFHMWUxTEZoandNUXBqQWhmUXVpWE9JVWNF
      aTgybmVpTHlKSlFDSUZSSWlqaHZMR3JYeEZFYkFnOU4KMWNQS0Z6bTNUMUxFUDd6RXFXbzZrTXJx
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrXBi0tLS0tQkVHSU4g
      Q0VSVElGSUNBVEUtLS0tLQpNSUlDU1RDQ0FlNmdBd0lCQWdJVUtIMXp0VGlLejZDUnVhTWpJMzFz
      b2ZneVBGQXdDZ1lJS29aSXpqMEVBd0l3CmdZRXhDekFKQmdOVkJBWVRBa2RDTVE4d0RRWURWUVFJ
      REFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnYKYmpFUU1BNEdBMVVFQ2d3SFQzSmtaWEps
      Y2pFK01Ed0dBMVVFQXd3MVkyRXVjM1Z3Y0d4NVkyaGhhVzR0Ym1WMApMbWhtTG1SbGJXOHVZWGR6
      TG1Kc2IyTnJZMmhoYVc1amJHOTFaSEJ2WXk1amIyMHdIaGNOTWpJd056STRNVFV4Ck5qVTBXaGNO
      TWpVd05URTNNVFV4TmpVMFdqQ0JnVEVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHYK
      Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dU1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1UNHdQ
      QVlEVlFRRApERFZqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF1YUdZdVpHVnRieTVoZDNNdVlteHZZ
      MnRqYUdGcGJtTnNiM1ZrCmNHOWpMbU52YlRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhB
      MElBQklHVGwrZXdrNWQwWTZzelYvYTcKTGZYZ0w2UlllNU91aXd5VC9CMHZ0alN2UW5veWNOOTJF
      dW0vVVhuVk4vL2tCdndpUWNZTUk5cmwrT2daT0RhRwoxUk9qUWpCQU1BOEdBMVVkRXdFQi93UUZN
      QU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXCkJCUzhjTmNFSVFPMnRIc2Jw
      cTFycGRUYnVEejFxekFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBeEkrRGFiK0gKWkQzNitGbDIz
      WmZ5bWNnU2pCTjJCeS9aK24wakQwZ0pJdWdDSVFDdWtVbENlOFhqaExHR05JMCtxOWNDaFNUUAp6
      bjBpMk96NDRpVmFtZHc3dGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjcK
      B1JlYWRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjcK
      B1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoGQWRtaW5zIjgK
      BkFkbWlucxIuEiQIARIgEggSBggBEgIIABoUEhIKDnN1cHBseWNoYWluTVNQEAEaBkFkbWlucyI7
      CgtFbmRvcnNlbWVudBIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZBZG1p
      bnMqBkFkbWlucxpAChVDaGFubmVsQ3JlYXRpb25Qb2xpY3kSJxIMCAMSCAoGQWRtaW5zGhcvQ2hh
      bm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMiLQoGQWRtaW5zEiMS
      CAgBEgQSAhIAGhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyoXL0NoYW5uZWwvT3JkZXJlci9BZG1p
      bnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoGQWRtaW5zGi0KGUJsb2NrRGF0YUhh
      c2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaxwEKEE9yZGVyZXJBZGRyZXNzZXMSsgES
      lgEKMG9yZGVyZXIxLmhmLmRlbW8uYXdzLmJsb2NrY2hhaW5jbG91ZHBvYy5jb206ODQ0Mwowb3Jk
      ZXJlcjIuaGYuZGVtby5hd3MuYmxvY2tjaGFpbmNsb3VkcG9jLmNvbTo4NDQzCjBvcmRlcmVyMy5o
      Zi5kZW1vLmF3cy5ibG9ja2NoYWluY2xvdWRwb2MuY29tOjg0NDMaFy9DaGFubmVsL09yZGVyZXIv
      QWRtaW5zGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMiIgoHV3JpdGVycxIX
      Eg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1p
      bnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxoOCgQKAgoACgAK
      AAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
